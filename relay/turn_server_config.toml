[turn]
# turn server realm
#
# specify the domain where the server is located.
# for a single node, this configuration is fixed,
# but each node can be configured as a different domain.
# this is a good idea to divide the nodes by namespace.
realm = "fornet"

# turn server listen interfaces
#
# The address and port to which the UDP Server is bound. Multiple
# addresses can be bound at the same time. The binding address supports
# ipv4 and ipv6.
[[turn.interfaces]]
transport = "udp"
bind = "0.0.0.0:13478"
# external address
#
# specify the node external address and port.
# for the case of exposing the service to the outside,
# you need to manually specify the server external IP
# address and service listening port.
external = "113.31.103.71:13478"

#[[turn.interfaces]]
#transport = "tcp"
#bind = "127.0.0.1:3478"
#external = "127.0.0.1:3478"

[controller]
# controller bind
#
# This option specifies the http server binding address used to control
# the turn server.
#
# Warn: This http server does not contain any means of authentication,
# and sensitive information and dangerous operations can be obtained
# through this service, please do not expose it directly to an unsafe
# environment.
listen = "127.0.0.1:3000"

# Set the value of the Access-Control-Allow-Origin header.
#
# Access-Control-Allow-Origin is a header request that states whether the
# response is shared with requesting code.
allow_origin = "*"

#[hooks]
## hooks bind uri
##
## This option is used to specify the http address of the hooks service.
##
## Warn: This http server does not contain any means of authentication,
## and sensitive information and dangerous operations can be obtained
## through this service, please do not expose it directly to an unsafe
## environment.
#bind = "http://127.0.0.1:8080"
#
## list of events followed by hooks
#sub_events = [
#    "allocated",
#    "binding",
#    "channel_bind",
#    "create_permission",
#    "refresh",
#    "abort"
#]

[log]
# log level
#
# An enum representing the available verbosity levels of the logger.
level = "info"

# static user password
#
# This option can be used to specify the
# static identity authentication information used by the turn server for
# verification. Note: this is a high-priority authentication method, turn
# The server will try to use static authentication first, and then use
# external control service authentication.
[auth]
answer = "test"
offer = "test"
user = "pass"
